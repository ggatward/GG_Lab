#############################################################
# Download OKD installers
OKD_VERSION="4.6.0-0.okd-2021-02-14-205305"

wget -O /root/openshift-client-linux-${OKD_VERSION}.tar.gz \
  https://github.com/openshift/okd/releases/download/${OKD_VERSION}/openshift-client-linux-${OKD_VERSION}.tar.gz
tar -xvzf openshift-client-linux-${OKD_VERSION}.tar.gz

wget -O /root/openshift-install-linux-${OKD_VERSION}.tar.gz \
  https://github.com/openshift/okd/releases/download/${OKD_VERSION}/openshift-install-linux-${OKD_VERSION}.tar.gz
tar -xvzf openshift-install-linux-${OKD_VERSION}.tar.gz

mv kubectl oc openshift-install /usr/local/bin/


# Download CoreOS boot images for iPXE
mkdir /var/www/html/okd4
wget -O /var/www/html/okd4/fedora-coreos-33.20210117.3.2-live-kernel-x86_64 \
  https://builds.coreos.fedoraproject.org/prod/streams/stable/builds/33.20210117.3.2/x86_64/fedora-coreos-33.20210117.3.2-live-kernel-x86_64
wget -O /var/www/html/okd4/fedora-coreos-33.20210117.3.2-live-initramfs.x86_64.img \
  https://builds.coreos.fedoraproject.org/prod/streams/stable/builds/33.20210117.3.2/x86_64/fedora-coreos-33.20210117.3.2-live-rootfs.x86_64.img
wget -O /var/www/html/okd4/fedora-coreos-33.20210117.3.2-live-rootfs.x86_64.img \
  https://builds.coreos.fedoraproject.org/prod/streams/stable/builds/33.20210117.3.2/x86_64/fedora-coreos-33.20210117.3.2-live-rootfs.x86_64.img
restorecon -Rv /var/www/html


#############################################################
# Setup OKD installers
ssh-keygen -t rsa -N '' -f ~/.ssh/id_rsa

# Clean out any existing install artefacts
rm -rf /root/install_dir
mkdir /root/install_dir
cp okd4_files/install-config.yaml ./install_dir

# Edit the install-config.yaml in the install_dir, insert your pull secret and ssh key
cp ./install_dir/install-config.yaml ./install_dir/install-config.yaml.bak

# Generate the Kubernetes manifests for the cluster, ignore the warning:
openshift-install create manifests --dir=install_dir/


### NOT FOR 3-NODE CLUSTER ###
# Modify the cluster-scheduler-02-config.yaml manifest file to prevent Pods from being scheduled on the control plane machines:
#sed -i 's/mastersSchedulable: true/mastersSchedulable: False/' install_dir/manifests/cluster-scheduler-02-config.yml

# create the ignition-configs:
openshift-install create ignition-configs --dir=install_dir/

### NOTE - If recreating the configs, ensure install_dir is empty (incl hidden files) before running...

# Copy ignition and CoreOS files to webserver
cp -R install_dir/* /var/www/html/okd4/
chown -R apache: /var/www/html/
find /var/www/html/ -type d -exec chmod 755 {} \;
find /var/www/html/ -type f -exec chmod 644 {} \;


#############################################################
# Start Bootstrap Node
# - Power on okd4-bootstrap VM, perform iPXE network install of bootstrap server
# - Power on okd4-master VMs, perform iPXE network install of master server

### NOT FOR 3-NODE CLUSTER ###
# - Power on okd4-worker VMs, perform iPXE network install of worker server

# During the bootstrap process it is usual for all nodes to be reporting errors accessing the API.
# Bootstrapping can take upwards of 30 minutes to complete.

# The bootstrap process can be monitored from the okd4-services node with the following
openshift-install --dir=install_dir/ wait-for bootstrap-complete --log-level=info
